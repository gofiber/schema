name: Test

on:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - "**/*.md"
  pull_request:
    paths-ignore:
      - "**/*.md"

jobs:
  unit:
    strategy:
      matrix:
        go-version: [1.24.x]
        platform: [ubuntu-latest, windows-latest, macos-latest, macos-13]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Download gotestsum
        shell: bash
        run: |
          set -euo pipefail
          VER=1.12.3
          OS=$(uname -s)
          case "$OS" in
            Linux*) OS=linux;;
            Darwin*) OS=darwin;;
            MINGW*|MSYS*) OS=windows;;
          esac
          ARCH=$(uname -m)
          case "$ARCH" in
            x86_64|amd64) ARCH=amd64;;
            aarch64|arm64) ARCH=arm64;;
          esac
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${VER}/gotestsum_${VER}_${OS}_${ARCH}.tar.gz" | tar -xz
      - name: Test
        shell: bash
        run: ./gotestsum -f testname -- ./... -race -count=1 -coverprofile=coverage.txt -covermode=atomic -shuffle=on

      - name: Upload coverage reports to Codecov
        if: ${{ matrix.platform == 'ubuntu-latest' && matrix.go-version == '1.24.x' }}
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: unittests
          slug: gofiber/schema

  repeated:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Download gotestsum
        shell: bash
        run: |
          set -euo pipefail
          VER=1.12.3
          OS=$(uname -s)
          case "$OS" in
            Linux*) OS=linux;;
            Darwin*) OS=darwin;;
            MINGW*|MSYS*) OS=windows;;
          esac
          ARCH=$(uname -m)
          case "$ARCH" in
            x86_64|amd64) ARCH=amd64;;
            aarch64|arm64) ARCH=arm64;;
          esac
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${VER}/gotestsum_${VER}_${OS}_${ARCH}.tar.gz" | tar -xz

      - name: Test
        shell: bash
        run: ./gotestsum -f testname -- ./... -race -count=15 -shuffle=on
